# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1R-oV6y3yDEFxvCMVKh_hg7oAfeA8-DPk
"""

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.graph_objects as go


dados = {
    "Passes": {"Bons": 24, "Fracos": 3},
    "Assistências": 3,
    "Dribles": 3,
    "Roubos de Bola": 11,
    "Finalizações": {
        "Chutes Altos": 1,
        "Chutes Fracos": 5,
    },
    "Erros": {"Recebimento de Bola": 1, "Passe Errado": 1},
}


dados = {
    "Passes bons": 24,
    "Passes fracos": 3,
    "Assistências": 2,
    "Dribles": 2,
    "Roubadas de bola": 11,
    "Tentativas de finalização": 4,
    "Chutes altos": 3,
    "Chutes fracos": 3,
    "Defesas na área": 3,
    "Escanteios": 2,
    "Lançamentos da goleira": 3,
}


df = pd.DataFrame(list(dados.items()), columns=["Ação", "Quantidade"])


categorias = list(dados.keys())
valores = list(dados.values())

fig_radar = go.Figure()

fig_radar.add_trace(go.Scatterpolar(
    r=valores + [valores[0]],
    theta=categorias + [categorias[0]],
    fill='toself',
    name="Desempenho da gatinha",
    line=dict(color="blue")
))

fig_radar.update_layout(
    polar=dict(radialaxis=dict(visible=True)),
    showlegend=True,
    title="Radar de Desempenho da gatinha"
)


largura = 25
comprimento = 42

posicoes = [
    (5, 5), (10, 10), (12, 15), (15, 20), (18, 22), (10, 30), (7, 35), (12, 38),
    (5, 20), (20, 5), (22, 10), (15, 15), (10, 22), (18, 30), (5, 38)
]


heatmap_data = np.zeros((comprimento, largura))

for x, y in posicoes:
    heatmap_data[y, x] += 1

plt.figure(figsize=(8, 14))
sns.heatmap(heatmap_data, cmap="Reds", cbar=True, linewidths=0.5)


plt.plot([0, 0, largura, largura, 0], [0, comprimento, comprimento, 0, 0], color="black", linewidth=3)  # Linhas da quadra
plt.plot([largura/2, largura/2], [0, comprimento], color="black", linewidth=2, linestyle="dashed")  # Linha central

plt.plot([7, 7, 18, 18], [0, 5, 5, 0], color="black", linewidth=2)  # Gol inferior
plt.plot([7, 7, 18, 18], [comprimento, comprimento-5, comprimento-5, comprimento], color="black", linewidth=2)  # Gol superior

plt.title("Heatmap da Movimentação da gatinha ao longo do treino", fontsize=14)
plt.xlabel("Largura da Quadra (m)")
plt.ylabel("Comprimento da Quadra (m)")
plt.gca().invert_yaxis()
plt.show()


fig_radar.show()


categorias = ["Passes Bons", "Passes Fracos", "Assistências", "Dribles", "Roubos de Bola", "Finalizações", "Erros"]
valores = [24, 3, 3, 3, 11, 7, 2]
categorias += [categorias[0]]
valores += [valores[0]]

angles = np.linspace(0, 2 * np.pi, len(categorias), endpoint=False).tolist()
fig, ax = plt.subplots(figsize=(6, 6), subplot_kw=dict(polar=True))
ax.fill(angles, valores, color="red", alpha=0.25)
ax.plot(angles, valores, color="red", linewidth=2)
ax.set_yticklabels([])
ax.set_xticks(angles)
ax.set_xticklabels(categorias, fontsize=12)
plt.title("Mapa de Radar - Desempenho da gatinha", fontsize=16, y=1.1)
plt.show()

labels = ["Passes Bons", "Passes Fracos", "Assistências", "Dribles", "Roubos de Bola"]
valores_bar = [24, 3, 3, 3, 11]

plt.figure(figsize=(10, 5))
plt.bar(labels, valores_bar, color=["green", "red", "blue", "orange", "purple"])
plt.title("Desempenho em acoes especificas", fontsize=16)
plt.xlabel("Categorias", fontsize=12)
plt.ylabel("Quantidade", fontsize=12)
plt.show()

finalizacoes = dados["Finalizações"]
labels_pie = finalizacoes.keys()
valores_pie = finalizacoes.values()

plt.figure(figsize=(6, 6))
plt.pie(valores_pie, labels=labels_pie, autopct="%1.1f%%", startangle=90, colors=["red", "blue", "green", "orange"])
plt.title("Distribuição dos Tipos de Finalização", fontsize=16)
plt.show()

# AdicionAR esta linha no final do arquivo
server = app.server

if __name__ == "__main__":
    app.run_server(debug=True)

